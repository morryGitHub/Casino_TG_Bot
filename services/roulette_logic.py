from random import randint

mono_digits = {
    '0': '\U0001D7F6',
    '1': '\U0001D7F7',
    '2': '\U0001D7F8',
    '3': '\U0001D7F9',
    '4': '\U0001D7FA',
    '5': '\U0001D7FB',
    '6': '\U0001D7FC',
    '7': '\U0001D7FD',
    '8': '\U0001D7FE',
    '9': '\U0001D7FF',
}


def to_mono_number(number: int) -> str:
    # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —á–∏—Å–ª–æ –≤ —Å—Ç—Ä–æ–∫—É –º–æ–Ω–æ—à–∏—Ä–∏–Ω–Ω—ã–º–∏ —Ü–∏—Ñ—Ä–∞–º–∏, –±–µ–∑ –≤–µ–¥—É—â–∏—Ö –Ω—É–ª–µ–π
    return ''.join(mono_digits[d] for d in str(number))


def create_roulette():
    colors = ['üî¥', '‚ö´Ô∏è', 'üü¢']
    lines = []

    for i in range(19):
        if i == 0:
            # –î–ª—è 0 –∏—Å–ø–æ–ª—å–∑—É–µ–º –º–æ–Ω–æ—à–∏—Ä–∏–Ω–Ω—ã–π –Ω–æ–ª—å
            lines.append(f"{to_mono_number(i)} {colors[2]}")
            continue
        color = colors[0] if i % 2 == 0 else colors[1]
        lines.append(f"{to_mono_number(i):{to_mono_number(0)}>2} {color}")

    # –†–∞–∑–±–∏–≤–∞–µ–º –Ω–∞ —Å—Ç—Ä–æ–∫–∏ –ø–æ 6 —ç–ª–µ–º–µ–Ω—Ç–æ–≤
    rows = [lines[i:i + 6] for i in range(1, len(lines), 6)]
    result = f"{lines[0]}\n"  # 0 üü¢
    for row in rows:
        result += '  '.join(row) + '\n'
    return result


def spin_roulette():
    number = randint(0, 18)
    if number == 0:
        color = 'green'
    elif number % 2 == 0:
        color = 'red'
    else:
        color = 'black'
    return [number, color]


def calculate_win_and_payout(number: int, color: str, bet_choice: str, amount: int) -> tuple[bool, int]:
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –≤—ã–∏–≥—Ä–∞–ª –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –∏ —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç –≤—ã–ø–ª–∞—Ç—É.

    :param number: –í—ã–ø–∞–≤—à–µ–µ —á–∏—Å–ª–æ (0-36)
    :param color: –¶–≤–µ—Ç —Å–µ–∫—Ç–æ—Ä–∞ (üî¥, ‚ö´Ô∏è, üü¢)
    :param bet_choice: –ß—Ç–æ –ø–æ—Å—Ç–∞–≤–∏–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å (—Ü–≤–µ—Ç –∏–ª–∏ –¥–∏–∞–ø–∞–∑–æ–Ω)
    :param amount: –°—É–º–º–∞ —Å—Ç–∞–≤–∫–∏
    :return: (–ø–æ–±–µ–¥–∞: bool, –≤—ã–ø–ª–∞—Ç–∞: int)
    """
    RED_VARIANTS = {"red", "–∫—Ä–∞—Å–Ω–æ–µ", "–∫—Ä–∞—Å–Ω—ã–π", "–∫", "–∫—Ä–∞—Å–Ω"}
    BLACK_VARIANTS = {"black", "—á—ë—Ä–Ω–æ–µ", "—á–µ—Ä–Ω–æ–µ", "—á—ë—Ä–Ω—ã–π", "—á–µ—Ä–Ω—ã–π", "—á"}
    GREEN_VARIANTS = {"green", "–∑–µ–ª–µ–Ω–æ–µ", "–∑–µ–ª—ë–Ω–æ–µ", "–∑–µ–ª—ë–Ω—ã–π", "–∑–µ–ª–µ–Ω—ã–π", "–∑", "–∑–µ–ª"}

    if bet_choice in RED_VARIANTS:
        if color == "red":
            return True, amount * 2
    elif bet_choice in BLACK_VARIANTS:
        if color == "black":
            return True, amount * 2
    elif bet_choice in GREEN_VARIANTS:
        if number == 0:
            return True, amount * 18
    elif "-" in bet_choice:
        try:
            start, end = map(int, bet_choice.split("-"))
            if start <= number <= end:
                span = (end + 1) - start  # –ö–æ–ª-–≤–æ —á–∏—Å–µ–ª –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ
                if span == 6:
                    return True, amount * 3
                elif span == 9:
                    return True, amount * 2
                else:
                    return True, amount  # –ü—Ä–æ—Å—Ç–æ –≤–æ–∑–≤—Ä–∞—Ç (–∏–ª–∏ –∫–∞–∫ —Ç—ã —Ö–æ—á–µ—à—å)
        except ValueError:
            return False, 0
    return False, 0
